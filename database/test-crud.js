const Database = require('./database')

async function testCRUD() {
  const db = new Database()
  
  try {
    console.log('üß™ Testando CRUD na tabela de not√≠cias...')
    
    // Inicializar banco
    await db.init()
    
    // CREATE - Criar uma nova not√≠cia
    console.log('\nüìù CREATE - Criando nova not√≠cia...')
    const newNews = await db.run(
      `INSERT INTO news (title, content, image, author, is_published) 
       VALUES (?, ?, ?, ?, ?)`,
      [
        'Nova Banda de Metalcore Anuncia Turn√™',
        'A banda Spiritbox anunciou hoje sua nova turn√™ mundial que passar√° pelo Brasil em 2024. A turn√™ "The Summoning World Tour" incluir√° shows em S√£o Paulo, Rio de Janeiro e Porto Alegre.',
        'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=800&h=400&fit=crop',
        'Admin',
        1
      ]
    )
    console.log('‚úÖ Not√≠cia criada com ID:', newNews.id)
    
    // READ - Buscar todas as not√≠cias
    console.log('\nüìñ READ - Buscando todas as not√≠cias...')
    const allNews = await db.all('SELECT * FROM news ORDER BY created_at DESC')
    console.log(`‚úÖ Encontradas ${allNews.length} not√≠cias:`)
    allNews.forEach(news => {
      console.log(`  - ID: ${news.id} | ${news.title} | Autor: ${news.author}`)
    })
    
    // READ - Buscar not√≠cia espec√≠fica
    console.log('\nüîç READ - Buscando not√≠cia espec√≠fica...')
    const specificNews = await db.get('SELECT * FROM news WHERE id = ?', [newNews.id])
    console.log(`‚úÖ Not√≠cia encontrada: "${specificNews.title}"`)
    
    // UPDATE - Atualizar not√≠cia
    console.log('\n‚úèÔ∏è UPDATE - Atualizando not√≠cia...')
    const updateResult = await db.run(
      'UPDATE news SET title = ?, content = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?',
      [
        'Spiritbox Anuncia Turn√™ Mundial 2024 - ATUALIZADO',
        'A banda Spiritbox anunciou hoje sua nova turn√™ mundial que passar√° pelo Brasil em 2024. A turn√™ "The Summoning World Tour" incluir√° shows em S√£o Paulo, Rio de Janeiro, Porto Alegre e Belo Horizonte. Ingressos j√° est√£o dispon√≠veis.',
        newNews.id
      ]
    )
    console.log(`‚úÖ Not√≠cia atualizada. Registros afetados: ${updateResult.changes}`)
    
    // READ - Verificar atualiza√ß√£o
    const updatedNews = await db.get('SELECT * FROM news WHERE id = ?', [newNews.id])
    console.log(`‚úÖ Not√≠cia atualizada: "${updatedNews.title}"`)
    
    // DELETE - Deletar not√≠cia de teste
    console.log('\nüóëÔ∏è DELETE - Deletando not√≠cia de teste...')
    const deleteResult = await db.run('DELETE FROM news WHERE id = ?', [newNews.id])
    console.log(`‚úÖ Not√≠cia deletada. Registros afetados: ${deleteResult.changes}`)
    
    // Verificar tabelas existentes
    console.log('\nüìä Verificando estrutura do banco...')
    const tables = await db.all("SELECT name FROM sqlite_master WHERE type='table'")
    console.log('‚úÖ Tabelas dispon√≠veis:')
    tables.forEach(table => {
      console.log(`  - ${table.name}`)
    })
    
    // Contagem de registros por tabela
    console.log('\nüìà Contagem de registros por tabela:')
    const tableCounts = [
      { name: 'users', query: 'SELECT COUNT(*) as count FROM users' },
      { name: 'bands', query: 'SELECT COUNT(*) as count FROM bands' },
      { name: 'programs', query: 'SELECT COUNT(*) as count FROM programs' },
      { name: 'news', query: 'SELECT COUNT(*) as count FROM news' },
      { name: 'images', query: 'SELECT COUNT(*) as count FROM images' },
    
      { name: 'stats', query: 'SELECT COUNT(*) as count FROM stats' }
    ]
    
    for (const table of tableCounts) {
      const result = await db.get(table.query)
      console.log(`  - ${table.name}: ${result.count} registros`)
    }
    
    console.log('\nüéâ Teste CRUD conclu√≠do com sucesso!')
    
  } catch (error) {
    console.error('‚ùå Erro durante teste CRUD:', error)
  } finally {
    await db.close()
  }
}

// Executar teste se chamado diretamente
if (require.main === module) {
  testCRUD()
}

module.exports = { testCRUD } 