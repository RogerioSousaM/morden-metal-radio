const puppeteer = require('puppeteer')

async function testAdminLogin() {
  console.log('üß™ Testando login do painel admin...')
  
  const browser = await puppeteer.launch({
    headless: false,
    defaultViewport: null,
    args: ['--start-maximized']
  })

  try {
    const page = await browser.newPage()
    
    // Capturar logs do console
    page.on('console', msg => {
      console.log('üì± Console:', msg.text())
    })
    
    // Capturar erros
    page.on('pageerror', error => {
      console.log('‚ùå Erro da p√°gina:', error.message)
    })
    
    // Capturar requisi√ß√µes de rede
    page.on('requestfailed', request => {
      console.log('‚ùå Requisi√ß√£o falhou:', request.url(), request.failure().errorText)
    })
    
    // Teste 1: Acessar o painel admin
    console.log('1Ô∏è‚É£ Acessando http://localhost:5174...')
    await page.goto('http://localhost:5174', { waitUntil: 'networkidle0' })
    
    // Aguardar carregamento
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    // Verificar se a p√°gina carregou
    const title = await page.title()
    console.log('üìÑ T√≠tulo da p√°gina:', title)
    
    // Verificar se h√° formul√°rio de login
    const loginForm = await page.$('form')
    if (loginForm) {
      console.log('‚úÖ Formul√°rio de login encontrado')
    } else {
      console.log('‚ùå Formul√°rio de login n√£o encontrado')
      return
    }
    
    // Teste 2: Preencher credenciais
    console.log('2Ô∏è‚É£ Preenchendo credenciais...')
    await page.type('input[type="text"]', 'admin')
    await page.type('input[type="password"]', 'mordenmetal2024')
    
    // Teste 3: Fazer login
    console.log('3Ô∏è‚É£ Clicando no bot√£o de login...')
    await page.click('button[type="submit"]')
    
    // Aguardar redirecionamento
    await new Promise(resolve => setTimeout(resolve, 5000))
    
    // Verificar se foi redirecionado
    const currentUrl = page.url()
    console.log('üåê URL atual:', currentUrl)
    
    if (currentUrl.includes('/admin/dashboard')) {
      console.log('‚úÖ Login bem-sucedido!')
    } else {
      console.log('‚ùå Login falhou - ainda na p√°gina de login')
      
      // Verificar se h√° mensagem de erro
      const errorMessage = await page.$('.text-red-400')
      if (errorMessage) {
        const errorText = await errorMessage.evaluate(el => el.textContent)
        console.log('‚ö†Ô∏è Mensagem de erro:', errorText)
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message)
  } finally {
    await browser.close()
  }
}

// Executar teste
testAdminLogin().catch(console.error) 